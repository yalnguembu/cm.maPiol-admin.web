import { Property } from "@/domains/property";
import { PropertyId, PropertyType } from "@/domains/property/types";
import { addressProperties, MoneyProperties } from "domains/types";

export class PropertyView {
  private constructor(
    readonly id: PropertyId,
    readonly centreImposition: string,
    readonly description: string,
    readonly price: MoneyProperties,
    readonly state: number,
    readonly hasAssensor: boolean,
    readonly hasBalcony: boolean,
    readonly hasCave: boolean,
    readonly hasHealthCenterNearby: boolean,
    readonly hasCollectiveHeating: boolean,
    readonly hasPath: boolean,
    readonly hasCollectiveHotWater: boolean,
    readonly hasSchoolNearby: boolean,
    readonly hasGreenSpace: boolean,
    readonly hasGarage: boolean,
    readonly hasSecurity: boolean,
    readonly hasIntercom: boolean,
    readonly hasDiningRoom: boolean,
    readonly hasGrabageChute: boolean,
    readonly favorite: string,
    readonly frequence: string,
    readonly numberOfBuilding: number,
    readonly nombreEscalier: number,
    readonly nombreEtage: number,
    readonly nombrePieces: number,
    readonly bathroomNumber: number,
    readonly bedroomNumber: number,
    readonly address: addressProperties,
    readonly status: number,
    readonly surface: string,
    readonly type: PropertyType,
    readonly usage: number,
    readonly userId: string,
    readonly images: string[],
    readonly video: string[],
  ) {}

  static fromDomain(properties: Property) {
    const {
      id,
      centreImposition,
      description,
      price,
      state,
      hasAssensor,
      hasBalcony,
      hasCave,
      hasHealthCenterNearby,
      hasCollectiveHeating,
      hasPath,
      hasCollectiveHotWater,
      hasSchoolNearby,
      hasGreenSpace,
      hasGarage,
      hasSecurity,
      hasIntercom,
      hasDiningRoom,
      hasGrabageChute,
      favorite,
      frequence,
      numberOfBuilding,
      nombreEscalier,
      nombreEtage,
      nombrePieces,
      bathroomNumber,
      bedroomNumber,
      address,
      status,
      surface,
      type,
      usage,
      userId,
      images,
      video
    } = properties.properties;

    return new PropertyView(
      id,
      centreImposition,
      description,
      price,
      state,
      hasAssensor,
      hasBalcony,
      hasCave,
      hasHealthCenterNearby,
      hasCollectiveHeating,
      hasPath,
      hasCollectiveHotWater,
      hasSchoolNearby,
      hasGreenSpace,
      hasGarage,
      hasSecurity,
      hasIntercom,
      hasDiningRoom,
      hasGrabageChute,
      favorite,
      frequence,
      numberOfBuilding,
      nombreEscalier,
      nombreEtage,
      nombrePieces,
      bathroomNumber,
      bedroomNumber,
      address,
      status,
      surface,
      type,
      usage,
      userId,
      images,
      video
    );
  }
}
